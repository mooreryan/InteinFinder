name: Build and test

on:
  push:
    branches:
      - "main"
      - "staging"
      - "dev"

  pull_request:
    branches:
      - "*"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        ocaml-compiler:
          - 4.14.0

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - run: echo "LOCAL_PATH=$HOME/.local/bin" >> $GITHUB_ENV

      - name: Setup path
        run: |
          mkdir -p "$LOCAL_PATH"
          echo "$LOCAL_PATH" >> $GITHUB_PATH

      - name: Download MAFFT
        run: |
          \curl -L \
          https://mafft.cbrc.jp/alignment/software/mafft-7.490-without-extensions-src.tgz \
          | tar xz \
          && cd mafft-*/core/ && make clean && make && sudo make install

      - name: Download & Install MMseqs2
        run: |
          \curl -L \
          https://github.com/soedinglab/MMseqs2/releases/download/13-45111/mmseqs-linux-sse2.tar.gz \
          | tar xz \
          && mv mmseqs/bin/mmseqs "$LOCAL_PATH"

      - name: Download & Install NCBI BLAST+
        run: |
          \curl -L \
          https://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/2.12.0/ncbi-blast-2.12.0+-x64-linux.tar.gz \
          | tar xz \
          && mv ncbi-blast-2.12.0+/bin/rpsblast "${LOCAL_PATH}/rpsblast+" \
          && mv ncbi-blast-2.12.0+/bin/makeprofiledb "${LOCAL_PATH}/makeprofiledb"

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
          dune-cache: true
          cache-prefix: v1-${{ matrix.os }}
          opam-local-packages: intein_finder.opam

      - name: Pin bio_io 0.6.0
        run: |
          opam pin add bio_io \
          https://github.com/mooreryan/bio_io/archive/refs/tags/0.6.0.tar.gz

      - run: opam install ./intein_finder.opam --deps-only --with-doc --with-test

      - name: Check release profile
        run: |
          opam exec -- make clean
          opam exec -- make build_release
          opam exec -- make test_release
          opam exec -- make install_release
        if: matrix.ocaml-compiler == '4.14.0'

      - name: Check dev profile
        run: |
          opam exec -- make clean
          opam exec -- make build_dev
          opam exec -- make test_dev
          opam exec -- make install_dev
        if: matrix.ocaml-compiler == '4.14.0'

      # Send the coverage.
      - name: Send coverage
        run: |
          opam install bisect_ppx
          opam exec -- make send_coverage
        if: matrix.ocaml-compiler == '4.14.0'
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
